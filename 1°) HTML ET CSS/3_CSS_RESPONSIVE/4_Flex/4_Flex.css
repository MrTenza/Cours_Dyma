* {
  margin: 0;
  padding: 0;
}
.container {
  background-color: #333;
  height: 100vh;

  /******** ROW *******/

  /* Déclarer le parent et les enfants en flex */
  display: flex;

  /* Direction du flex horizontale, verticale ou inversé 
  flex-direction: row;*/

  /* Retour à la ligne 
  flex-wrap: nowrap;*/

  /* Raccourcis de flex-direction et wrap */
  flex-flow: row nowrap;
  /* Axe principale */

  /*justify-content: space-between;*/
  /* Space-around => met de l'espace autour des éléments 
  Space-evenly => meme espace entre les éléments 
  Space-between => Pas d'espace a gauche du premier élément et à droite du dernier */

  /* Alignement verticale */
  /* Align-items => aligne que les items */
  /*align-items: center; */

  /* Align-content => Aligne l'ensemble du flex verticalement */
  /*align-content: center;*/

  /******** COLUMNS*******/

  /*flex-direction: column;*/
  /*align-items: stretch;*/
  /*justify-content: center;*/
}

.item {
  background: #2980b9;
  /* flex-basis est prioritaire à width */
  /*flex-basis: 200px;*/

  /*height: 200px;*/
  margin: 1rem;
}

.item-1 {
  /* Attibut 2/4 d'espace  */
  /*flex: 2;*/
  flex: 1;
  /* flex:auto sur les element permet de repartir équitablement */
}

.item-2 {
  flex: 1;
  /* Flex-shrink => Définis de combien un élément rapetisse si il n'y a pas la place 

  /* Flex-grow => Définis de combien un élément augmente pour combler l'espace qui reste */

  /* Commande expresse flex: 1 1 auto => grow shrink flex-basis */

  /* align-self => si on est en flex-start , on peut demande a ce que un élément soit par exeple en flex-end */

  /* order: 1/2 etc , change l'ordre des éléments directement dans le css */
}

.item-3 {
  flex: 1;
}
